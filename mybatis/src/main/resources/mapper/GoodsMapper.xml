<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="ksmart.mybatis.mapper.GoodsMapper">
	
	<resultMap type="Goods" id="goodsResultMap">
		<id column="g_code" property="goodsCode"></id>
		<result column="g_name" property="goodsName"></result>
		<result column="g_price" property="goodsPrice"></result>
		<result column="g_seller_id" property="goodsSellerId"></result>
		<result column="g_reg_date" property="goodsRegDate"></result>
		
		<!-- 관계맵핑 1:1 association -->
		<association property="sellerInfo" javaType="Member">
			<id column="m_id" property="memberId"/>		
			<result column="m_pw" property="memberPw"/>
			<result column="m_name" property="memberName"/>
			<result column="m_level" property="memberLevel"/>
			<result column="m_email" property="memberEmail"/>
			<result column="m_addr" property="memberAddr"/>
			<result column="g_reg_date" property="memberRegDate"/>
		</association>
	</resultMap>
	
	
	<resultMap type="Member" id="sellerResultMap">	
		<!-- id 태그는 조회ㅏ시 테이블의 PK -->
		<id column="m_id" property="memberId"/>		
		<!-- result 태그는 조회시 테이블이 일반 컬럼 혹은 외래키 -->
		<result column="m_pw" property="memberPw"/>
		<result column="m_name" property="memberName"/>
		<result column="m_level" property="memberLevel"/>
		<result column="m_email" property="memberEmail"/>
		<result column="m_addr" property="memberAddr"/>
		<result column="m_reg_date" property="memberRegDate"/>
		<!-- 관계맵핑 1:n collection -->
		
		<collection property="goodsList" 	ofType="Goods">
			<id column="g_code" property="goodsCode"></id>
			<result column="g_name" property="goodsName"></result>
			<result column="g_price" property="goodsPrice"></result>
			<result column="g_seller_id" property="goodsSellerId"></result>
			<result column="g_reg_date" property="goodsRegDate"></result>
		</collection>
	</resultMap>
	<select id="getSellerList" resultMap="sellerResultMap">
		/* 판매자별 상품 목록 조회 */
		SELECT
			m.m_id,
			m.m_name,
			m.m_email,
			m.m_addr,
			g.g_code,
			g.g_name,
			g.g_price,
			g.g_reg_date
		FROM
			tb_member AS m
			LEFT JOIN
			tb_goods AS g
			on
			m.m_id = g.g_seller_id
		WHERE
			m.m_level = 2;
	</select>
	
	
		<!-- 상품 정보 삭제 -->
	<delete id ="removeGoodsByCode" parameterType="String">
		/* 상품 삭제 */
		DELETE
		FROM
			tb_goods AS g
		WHERE
			g.g_code = #{goodsCode};
	</delete>
	<select id="getGoodsByCode" parameterType="String" resultMap="goodsResultMap">
		/* 상품 조회 */
		SELECT
			g.g_code,
			g.g_name,
			g.g_price,
			g.g_seller_id,
			g.g_reg_date
		FROM
			tb_goods as g
		WHERE
			g.g_code = #{goodsCode}; 
	</select>
	
	
	<insert id="addGoods" parameterType="Goods">
		<selectKey resultType="String" keyColumn="newGoodsCode" keyProperty="goodsCode" order="BEFORE">
		<![CDATA[
		/* 상품코드 자동 증가 쿼리문 */
		SELECT
			CASE
			WHEN COUNT(*) = 0 THEN 'g001'
			WHEN CAST(SUBSTRING_INDEX(g_code,'g',-1) AS UNSIGNED) < 999 
			THEN CONCAT('g',LPAD(MAX(CAST(SUBSTRING_INDEX(g_code,'g',-1) AS UNSIGNED))+1,3,'0'))
			ELSE
				CONCAT('g',MAX(CAST(SUBSTRING_INDEX(g_code,'g',-1) AS UNSIGNED))+1)
			END AS newGoodsCode
		FROM
			tb_goods
		]]>
		</selectKey>
		
		/* 상품 등록 */
		INSERT  INTo tb_goods
			(g_code, g_name, g_price, g_seller_id, g_reg_date)
		VALUES
			(#{goodsCode}, #{goodsName}, #{goodsPrice}, #{goodsSellerId}, CURDATE())
	</insert>
	
	<select id="getGoodsList" fetchSize="20" parameterType="Map" resultMap="goodsResultMap">
		/* 상품목록조회 */
		SELECT
			g.g_code,
			g.g_name,
			g.g_price,
			g.g_seller_id,
			m.m_name,
			m.m_email,
			g.g_reg_date
		FROM
			tb_goods as g
			INNER JOIN
			tb_member as m
			ON
			g.g_seller_id = m.m_id
		<where>
			<if test="searchValue2 != null and searchValue2 != '' ">
				${searchKey2} Like CONCAT('%', #{searchValue2}, '%')
			</if>
		</where>
		ORDER BY g.g_code DESC;
	</select>
	
	    <!-- 상품 수정 -->
	<update id="modifyGoods" parameterType="Goods">
		/*	상품 수정  */
		UPDATE tb_goods	
		<trim prefix="SET" suffixOverrides=",">
			<if test="goodsName != null and goodsName != '' ">
				g_name = #{goodsName},
			</if>
			<if test="goodsPrice != null and goodsPrice != '' ">			
				g_price = #{goodsPrice},
			</if>
			<if test="goodsSellerId != null and goodsSellerId != '' ">
				g_seller_id = #{goodsSellerId},
			</if>
		</trim>
		WHERE
			g_code = #{goodsCode};
	</update>






	<!-- 판매자가 등록한 상품 코드별 주문이력 삭제 -->
	<delete id="removeOrderByGCode" parameterType="String">
		/* 판매자 등록한 상품코드별 주문이력 삭제 */
		DELETE
			o
		FROM
			tb_goods AS g
			INNER JOIN 
			tb_order AS o
			ON 
			g.g_code = o.o_g_code
		WHERE 
			g.g_seller_id = #{sellerId};
	</delete>
	
		<!-- 주문 이력 삭제 -->
		<delete id="removeOrderByGoodsCode" parameterType="String">
		/* 상품코드별 주문이력삭제 */
		DELETE
			o
		FROM
			tb_goods as g
			INNER JOIN 
			tb_order as o
			ON 
			g.g_code = o.o_g_code
		WHERE
			g.g_code = #{goodsCode};
	</delete>
	
	<!-- 판매자별 상품삭제 -->
	<delete id="removeGoodsById" parameterType="String">
	/* 판매자별 상품삭제 */
	DELETE
	FROM
		tb_goods as g
	WHERE
		g.g_seller_id = #{sellerId};
	</delete>
	<!-- 구매자 구매이력 삭제 -->
	<delete id="removeOrderById" parameterType="String">
	/* 구매이력 상품삭제 */
	DELETE
	FROM
		tb_order as o
	WHERE
		o.o_id = #{sellerId};
	</delete>
	
</mapper>